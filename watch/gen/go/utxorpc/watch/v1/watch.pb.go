// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: utxorpc/watch/v1/watch.proto

package watchv1

import (
	v1 "github.com/bufbuild/buf-tour/gen/utxorpc/cardano/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Predicate to match transactions based on addresses.
type AddressPredicate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchSource []byte `protobuf:"bytes,1,opt,name=match_source,json=matchSource,proto3" json:"match_source,omitempty"` // Match transactions with the specified source address.
	MatchTarget []byte `protobuf:"bytes,2,opt,name=match_target,json=matchTarget,proto3" json:"match_target,omitempty"` // Match transactions with the specified target address.
	MatchAny    []byte `protobuf:"bytes,3,opt,name=match_any,json=matchAny,proto3" json:"match_any,omitempty"`          // Match transactions with the specified address as either source or target.
}

func (x *AddressPredicate) Reset() {
	*x = AddressPredicate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_watch_v1_watch_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressPredicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressPredicate) ProtoMessage() {}

func (x *AddressPredicate) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_watch_v1_watch_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressPredicate.ProtoReflect.Descriptor instead.
func (*AddressPredicate) Descriptor() ([]byte, []int) {
	return file_utxorpc_watch_v1_watch_proto_rawDescGZIP(), []int{0}
}

func (x *AddressPredicate) GetMatchSource() []byte {
	if x != nil {
		return x.MatchSource
	}
	return nil
}

func (x *AddressPredicate) GetMatchTarget() []byte {
	if x != nil {
		return x.MatchTarget
	}
	return nil
}

func (x *AddressPredicate) GetMatchAny() []byte {
	if x != nil {
		return x.MatchAny
	}
	return nil
}

// Predicate to match transactions based on assets.
type AssetPredicate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchPolicy []byte `protobuf:"bytes,1,opt,name=match_policy,json=matchPolicy,proto3" json:"match_policy,omitempty"` // Match transactions with the specified asset policy.
	MatchName   []byte `protobuf:"bytes,2,opt,name=match_name,json=matchName,proto3" json:"match_name,omitempty"`       // Match transactions with the specified asset name.
}

func (x *AssetPredicate) Reset() {
	*x = AssetPredicate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_watch_v1_watch_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetPredicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetPredicate) ProtoMessage() {}

func (x *AssetPredicate) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_watch_v1_watch_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetPredicate.ProtoReflect.Descriptor instead.
func (*AssetPredicate) Descriptor() ([]byte, []int) {
	return file_utxorpc_watch_v1_watch_proto_rawDescGZIP(), []int{1}
}

func (x *AssetPredicate) GetMatchPolicy() []byte {
	if x != nil {
		return x.MatchPolicy
	}
	return nil
}

func (x *AssetPredicate) GetMatchName() []byte {
	if x != nil {
		return x.MatchName
	}
	return nil
}

// Predicate to match transactions based on UTXOs.
type UtxoPredicate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchHash  []byte `protobuf:"bytes,1,opt,name=match_hash,json=matchHash,proto3" json:"match_hash,omitempty"`     // Match transactions with the specified UTXO hash.
	MatchIndex uint32 `protobuf:"varint,2,opt,name=match_index,json=matchIndex,proto3" json:"match_index,omitempty"` // Match transactions with the specified UTXO index.
}

func (x *UtxoPredicate) Reset() {
	*x = UtxoPredicate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_watch_v1_watch_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UtxoPredicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UtxoPredicate) ProtoMessage() {}

func (x *UtxoPredicate) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_watch_v1_watch_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UtxoPredicate.ProtoReflect.Descriptor instead.
func (*UtxoPredicate) Descriptor() ([]byte, []int) {
	return file_utxorpc_watch_v1_watch_proto_rawDescGZIP(), []int{2}
}

func (x *UtxoPredicate) GetMatchHash() []byte {
	if x != nil {
		return x.MatchHash
	}
	return nil
}

func (x *UtxoPredicate) GetMatchIndex() uint32 {
	if x != nil {
		return x.MatchIndex
	}
	return 0
}

// Predicate to match transactions based on datums.
type DatumPredicate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchHash []byte `protobuf:"bytes,1,opt,name=match_hash,json=matchHash,proto3" json:"match_hash,omitempty"` // Match transactions with the specified datum hash.
}

func (x *DatumPredicate) Reset() {
	*x = DatumPredicate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_watch_v1_watch_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatumPredicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatumPredicate) ProtoMessage() {}

func (x *DatumPredicate) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_watch_v1_watch_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatumPredicate.ProtoReflect.Descriptor instead.
func (*DatumPredicate) Descriptor() ([]byte, []int) {
	return file_utxorpc_watch_v1_watch_proto_rawDescGZIP(), []int{3}
}

func (x *DatumPredicate) GetMatchHash() []byte {
	if x != nil {
		return x.MatchHash
	}
	return nil
}

// Predicate to match transactions based on any of the specified types.
type AnyPredicate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*AnyPredicate_Address
	//	*AnyPredicate_Asset
	//	*AnyPredicate_Utxo
	//	*AnyPredicate_Datum
	Type isAnyPredicate_Type `protobuf_oneof:"type"`
}

func (x *AnyPredicate) Reset() {
	*x = AnyPredicate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_watch_v1_watch_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnyPredicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyPredicate) ProtoMessage() {}

func (x *AnyPredicate) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_watch_v1_watch_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyPredicate.ProtoReflect.Descriptor instead.
func (*AnyPredicate) Descriptor() ([]byte, []int) {
	return file_utxorpc_watch_v1_watch_proto_rawDescGZIP(), []int{4}
}

func (m *AnyPredicate) GetType() isAnyPredicate_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *AnyPredicate) GetAddress() *AddressPredicate {
	if x, ok := x.GetType().(*AnyPredicate_Address); ok {
		return x.Address
	}
	return nil
}

func (x *AnyPredicate) GetAsset() *AssetPredicate {
	if x, ok := x.GetType().(*AnyPredicate_Asset); ok {
		return x.Asset
	}
	return nil
}

func (x *AnyPredicate) GetUtxo() *UtxoPredicate {
	if x, ok := x.GetType().(*AnyPredicate_Utxo); ok {
		return x.Utxo
	}
	return nil
}

func (x *AnyPredicate) GetDatum() *DatumPredicate {
	if x, ok := x.GetType().(*AnyPredicate_Datum); ok {
		return x.Datum
	}
	return nil
}

type isAnyPredicate_Type interface {
	isAnyPredicate_Type()
}

type AnyPredicate_Address struct {
	Address *AddressPredicate `protobuf:"bytes,1,opt,name=address,proto3,oneof"` // Address-based predicate.
}

type AnyPredicate_Asset struct {
	Asset *AssetPredicate `protobuf:"bytes,2,opt,name=asset,proto3,oneof"` // Asset-based predicate.
}

type AnyPredicate_Utxo struct {
	Utxo *UtxoPredicate `protobuf:"bytes,3,opt,name=utxo,proto3,oneof"` // UTXO-based predicate.
}

type AnyPredicate_Datum struct {
	Datum *DatumPredicate `protobuf:"bytes,4,opt,name=datum,proto3,oneof"` // Datum-based predicate.
}

func (*AnyPredicate_Address) isAnyPredicate_Type() {}

func (*AnyPredicate_Asset) isAnyPredicate_Type() {}

func (*AnyPredicate_Utxo) isAnyPredicate_Type() {}

func (*AnyPredicate_Datum) isAnyPredicate_Type() {}

// Request to watch transactions based on a set of predicates.
type WatchTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Predicate []*AnyPredicate        `protobuf:"bytes,1,rep,name=predicate,proto3" json:"predicate,omitempty"`                  // List of predicates to filter transactions.
	FieldMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"` // Field mask to selectively return fields.
}

func (x *WatchTxRequest) Reset() {
	*x = WatchTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_watch_v1_watch_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchTxRequest) ProtoMessage() {}

func (x *WatchTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_watch_v1_watch_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchTxRequest.ProtoReflect.Descriptor instead.
func (*WatchTxRequest) Descriptor() ([]byte, []int) {
	return file_utxorpc_watch_v1_watch_proto_rawDescGZIP(), []int{5}
}

func (x *WatchTxRequest) GetPredicate() []*AnyPredicate {
	if x != nil {
		return x.Predicate
	}
	return nil
}

func (x *WatchTxRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// Represents a transaction from any supported blockchain.
type AnyChainTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Chain:
	//
	//	*AnyChainTx_Cardano
	Chain isAnyChainTx_Chain `protobuf_oneof:"chain"`
}

func (x *AnyChainTx) Reset() {
	*x = AnyChainTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_watch_v1_watch_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnyChainTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyChainTx) ProtoMessage() {}

func (x *AnyChainTx) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_watch_v1_watch_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyChainTx.ProtoReflect.Descriptor instead.
func (*AnyChainTx) Descriptor() ([]byte, []int) {
	return file_utxorpc_watch_v1_watch_proto_rawDescGZIP(), []int{6}
}

func (m *AnyChainTx) GetChain() isAnyChainTx_Chain {
	if m != nil {
		return m.Chain
	}
	return nil
}

func (x *AnyChainTx) GetCardano() *v1.Tx {
	if x, ok := x.GetChain().(*AnyChainTx_Cardano); ok {
		return x.Cardano
	}
	return nil
}

type isAnyChainTx_Chain interface {
	isAnyChainTx_Chain()
}

type AnyChainTx_Cardano struct {
	Cardano *v1.Tx `protobuf:"bytes,1,opt,name=cardano,proto3,oneof"` // A Cardano transaction.
}

func (*AnyChainTx_Cardano) isAnyChainTx_Chain() {}

// Response containing the matching transactions.
type WatchTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//
	//	*WatchTxResponse_Apply
	//	*WatchTxResponse_Undo
	Action isWatchTxResponse_Action `protobuf_oneof:"action"`
}

func (x *WatchTxResponse) Reset() {
	*x = WatchTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_watch_v1_watch_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchTxResponse) ProtoMessage() {}

func (x *WatchTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_watch_v1_watch_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchTxResponse.ProtoReflect.Descriptor instead.
func (*WatchTxResponse) Descriptor() ([]byte, []int) {
	return file_utxorpc_watch_v1_watch_proto_rawDescGZIP(), []int{7}
}

func (m *WatchTxResponse) GetAction() isWatchTxResponse_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *WatchTxResponse) GetApply() *AnyChainTx {
	if x, ok := x.GetAction().(*WatchTxResponse_Apply); ok {
		return x.Apply
	}
	return nil
}

func (x *WatchTxResponse) GetUndo() *AnyChainTx {
	if x, ok := x.GetAction().(*WatchTxResponse_Undo); ok {
		return x.Undo
	}
	return nil
}

type isWatchTxResponse_Action interface {
	isWatchTxResponse_Action()
}

type WatchTxResponse_Apply struct {
	Apply *AnyChainTx `protobuf:"bytes,1,opt,name=apply,proto3,oneof"` // Apply this transaction.
}

type WatchTxResponse_Undo struct {
	Undo *AnyChainTx `protobuf:"bytes,2,opt,name=undo,proto3,oneof"` // Undo this transaction.
}

func (*WatchTxResponse_Apply) isWatchTxResponse_Action() {}

func (*WatchTxResponse_Undo) isWatchTxResponse_Action() {}

var File_utxorpc_watch_v1_watch_proto protoreflect.FileDescriptor

var file_utxorpc_watch_v1_watch_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2f,
	0x76, 0x31, 0x2f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31,
	0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x61, 0x72, 0x64,
	0x61, 0x6e, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x75, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x61, 0x6e, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6e, 0x79, 0x22, 0x52, 0x0a, 0x0e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x4f, 0x0a, 0x0d, 0x55, 0x74, 0x78, 0x6f, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x2f, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x48, 0x61, 0x73,
	0x68, 0x22, 0x81, 0x02, 0x0a, 0x0c, 0x41, 0x6e, 0x79, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x38, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x35, 0x0a, 0x04,
	0x75, 0x74, 0x78, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x75, 0x74, 0x78,
	0x6f, 0x72, 0x70, 0x63, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x74,
	0x78, 0x6f, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x04, 0x75,
	0x74, 0x78, 0x6f, 0x12, 0x38, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x50, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x05, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x42, 0x06, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x0e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54,
	0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x74,
	0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x6e, 0x79, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x09, 0x70, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73,
	0x6b, 0x22, 0x49, 0x0a, 0x0a, 0x41, 0x6e, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x78, 0x12,
	0x32, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x61,
	0x6e, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x48, 0x00, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64,
	0x61, 0x6e, 0x6f, 0x42, 0x07, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x22, 0x85, 0x01, 0x0a,
	0x0f, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x6e, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x78, 0x48, 0x00, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x04, 0x75, 0x6e, 0x64, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x54, 0x78, 0x48, 0x00, 0x52, 0x04, 0x75, 0x6e, 0x64, 0x6f, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0x62, 0x0a, 0x0e, 0x54, 0x78, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54,
	0x78, 0x12, 0x20, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0xbf, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d,
	0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76,
	0x31, 0x42, 0x0a, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x66, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x2f, 0x62, 0x75, 0x66, 0x2d, 0x74, 0x6f, 0x75, 0x72, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2f,
	0x76, 0x31, 0x3b, 0x77, 0x61, 0x74, 0x63, 0x68, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x55, 0x57, 0x58,
	0xaa, 0x02, 0x10, 0x55, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x10, 0x55, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x5c, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1c, 0x55, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63,
	0x5c, 0x57, 0x61, 0x74, 0x63, 0x68, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x12, 0x55, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x3a,
	0x3a, 0x57, 0x61, 0x74, 0x63, 0x68, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_utxorpc_watch_v1_watch_proto_rawDescOnce sync.Once
	file_utxorpc_watch_v1_watch_proto_rawDescData = file_utxorpc_watch_v1_watch_proto_rawDesc
)

func file_utxorpc_watch_v1_watch_proto_rawDescGZIP() []byte {
	file_utxorpc_watch_v1_watch_proto_rawDescOnce.Do(func() {
		file_utxorpc_watch_v1_watch_proto_rawDescData = protoimpl.X.CompressGZIP(file_utxorpc_watch_v1_watch_proto_rawDescData)
	})
	return file_utxorpc_watch_v1_watch_proto_rawDescData
}

var file_utxorpc_watch_v1_watch_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_utxorpc_watch_v1_watch_proto_goTypes = []interface{}{
	(*AddressPredicate)(nil),      // 0: utxorpc.watch.v1.AddressPredicate
	(*AssetPredicate)(nil),        // 1: utxorpc.watch.v1.AssetPredicate
	(*UtxoPredicate)(nil),         // 2: utxorpc.watch.v1.UtxoPredicate
	(*DatumPredicate)(nil),        // 3: utxorpc.watch.v1.DatumPredicate
	(*AnyPredicate)(nil),          // 4: utxorpc.watch.v1.AnyPredicate
	(*WatchTxRequest)(nil),        // 5: utxorpc.watch.v1.WatchTxRequest
	(*AnyChainTx)(nil),            // 6: utxorpc.watch.v1.AnyChainTx
	(*WatchTxResponse)(nil),       // 7: utxorpc.watch.v1.WatchTxResponse
	(*fieldmaskpb.FieldMask)(nil), // 8: google.protobuf.FieldMask
	(*v1.Tx)(nil),                 // 9: utxorpc.cardano.v1.Tx
}
var file_utxorpc_watch_v1_watch_proto_depIdxs = []int32{
	0,  // 0: utxorpc.watch.v1.AnyPredicate.address:type_name -> utxorpc.watch.v1.AddressPredicate
	1,  // 1: utxorpc.watch.v1.AnyPredicate.asset:type_name -> utxorpc.watch.v1.AssetPredicate
	2,  // 2: utxorpc.watch.v1.AnyPredicate.utxo:type_name -> utxorpc.watch.v1.UtxoPredicate
	3,  // 3: utxorpc.watch.v1.AnyPredicate.datum:type_name -> utxorpc.watch.v1.DatumPredicate
	4,  // 4: utxorpc.watch.v1.WatchTxRequest.predicate:type_name -> utxorpc.watch.v1.AnyPredicate
	8,  // 5: utxorpc.watch.v1.WatchTxRequest.field_mask:type_name -> google.protobuf.FieldMask
	9,  // 6: utxorpc.watch.v1.AnyChainTx.cardano:type_name -> utxorpc.cardano.v1.Tx
	6,  // 7: utxorpc.watch.v1.WatchTxResponse.apply:type_name -> utxorpc.watch.v1.AnyChainTx
	6,  // 8: utxorpc.watch.v1.WatchTxResponse.undo:type_name -> utxorpc.watch.v1.AnyChainTx
	5,  // 9: utxorpc.watch.v1.TxWatchService.WatchTx:input_type -> utxorpc.watch.v1.WatchTxRequest
	7,  // 10: utxorpc.watch.v1.TxWatchService.WatchTx:output_type -> utxorpc.watch.v1.WatchTxResponse
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_utxorpc_watch_v1_watch_proto_init() }
func file_utxorpc_watch_v1_watch_proto_init() {
	if File_utxorpc_watch_v1_watch_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_utxorpc_watch_v1_watch_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressPredicate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_watch_v1_watch_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetPredicate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_watch_v1_watch_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UtxoPredicate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_watch_v1_watch_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatumPredicate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_watch_v1_watch_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnyPredicate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_watch_v1_watch_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_watch_v1_watch_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnyChainTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_watch_v1_watch_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_utxorpc_watch_v1_watch_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*AnyPredicate_Address)(nil),
		(*AnyPredicate_Asset)(nil),
		(*AnyPredicate_Utxo)(nil),
		(*AnyPredicate_Datum)(nil),
	}
	file_utxorpc_watch_v1_watch_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*AnyChainTx_Cardano)(nil),
	}
	file_utxorpc_watch_v1_watch_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*WatchTxResponse_Apply)(nil),
		(*WatchTxResponse_Undo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_utxorpc_watch_v1_watch_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_utxorpc_watch_v1_watch_proto_goTypes,
		DependencyIndexes: file_utxorpc_watch_v1_watch_proto_depIdxs,
		MessageInfos:      file_utxorpc_watch_v1_watch_proto_msgTypes,
	}.Build()
	File_utxorpc_watch_v1_watch_proto = out.File
	file_utxorpc_watch_v1_watch_proto_rawDesc = nil
	file_utxorpc_watch_v1_watch_proto_goTypes = nil
	file_utxorpc_watch_v1_watch_proto_depIdxs = nil
}
