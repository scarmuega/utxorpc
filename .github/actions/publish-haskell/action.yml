name: 'publish haskell'
description: 'Publishes Haskell codegen spec to Hackage (WIP)'
inputs:
  registry-token:
    description: token to authenticate to Hackage registry
    required: false
  mode:
    description: supported values are 'release' and 'dry-run'
    required: true

runs:
  using: 'composite'

  steps:
    - name: Setup Haskell
      id: setup-hs
      uses: haskell-actions/setup@v2
      with:
        ghc-version: 9.6.4

    - name: Configure Cabal build
      shell: bash
      working-directory: codegen/haskell
      run: |
        cabal configure --enable-tests --enable-benchmarks --disable-documentation
        cabal build all --dry-run
      # ^ Creates a plan.json file equivalent to a package-lock.json, used for creating a cache key

    - name: Restore Cabal build cache
      uses: actions/cache/restore@v4
      id: cache-cabal-build
      env:
        key: ${{ runner.os }}-ghc-${{ steps.setup-hs.outputs.ghc-version
          }}-cabal-${{ steps.setup-hs.outputs.cabal-version }}
      with:
        path: ${{ steps.setup-hs.outputs.cabal-store }}
        key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
        restore-keys: |
          ${{ env.key }}-

    - name: Get Package Version
      id: package-version
      shell: bash
      working-directory: codegen/haskell
      run: |
        VERSION=$(sed -nE '/^version:\s*([0-9]\.[0-9]+\.[0-9]+.*)$/s||\1|p' utxorpc.cabal)
        echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

    - name: Build Haskell Library
      id: build
      shell: bash
      working-directory: codegen/haskell
      env:
        version: ${{ steps.package-version.outputs.VERSION }}
      run: |
        cabal build
        cabal sdist
        echo "SDIST-LOCATION=$(pwd)/dist-newstyle/sdist/utxorpc-${{ env.version }}.tar.gz" >> "$GITHUB_OUTPUT"

    - name: Upload Haskell Artifacts
      if: inputs.mode == 'release'
      uses: actions/upload-artifact@v4
      env:
        version: ${{ steps.package-version.outputs.VERSION }}
        location: ${{ steps.build.outputs.SDIST-LOCATION }}
      with:
        name: haskell-${{ env.version }}
        path: ${{ env.location }}

    - name: Cache Cabal
      if: steps.cache-cabal-build.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: ${{ steps.setup-hs.outputs.cabal-store }}
        key: ${{ steps.cache-cabal-build.outputs.cache-primary-key }}
