name: "Publish Artifacts"

on:
  push:
    tags:
      - v*

jobs:
  codegen:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install protoc
        run: |
          PROTOC_ZIP=protoc-3.14.0-linux-x86_64.zip
          curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v3.14.0/$PROTOC_ZIP
          unzip -o $PROTOC_ZIP -d . bin/protoc
          unzip -o $PROTOC_ZIP -d . 'include/*'
          rm -f $PROTOC_ZIP
          echo "$(pwd)/bin" >> "$GITHUB_PATH"

      - name: Setup npm
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.0
          cache: "npm"

      - name: Add node_modules to PATH
        run: echo "$(pwd)/node_modules/.bin" >> "$GITHUB_PATH"

      - name: Install Prost from Cargo
        uses: baptiste0928/cargo-install@v2
        with:
          crate: protoc-gen-prost

      - name: Install Tonic from Cargo
        uses: baptiste0928/cargo-install@v2
        with:
          crate: protoc-gen-tonic

      - name: Install protoc-gen-prost-crate from Cargo
        uses: baptiste0928/cargo-install@v2
        with:
          crate: protoc-gen-prost-crate

      - name: Install Prost serde from Cargo
        uses: baptiste0928/cargo-install@v2
        with:
          crate: protoc-gen-prost-serde

      - name: Install Protoc Plugins from npm
        run: |
          npm install @connectrpc/protoc-gen-connect-es
          npm install @bufbuild/protoc-gen-es

      - name: Setup Haskell
        id: setup-hs
        uses: haskell-actions/setup@v2
        with:
          ghc-version: 9.6.4

      - name: Restore cached Haskell plugin
        uses: actions/cache/restore@v4
        id: cache-proto-lens-protoc
        env:
          key: ${{ runner.os }}-ghc-${{ steps.setup-hs.outputs.ghc-version }}-cabal-${{ steps.setup-hs.outputs.cabal-version }}
        with:
          path: ${{ steps.setup-hs.outputs.cabal-store }}
          key: ${{ env.key }}-proto-lens-protoc
          restore-keys: |
            ${{ env.key }}-proto-lens-protoc

      - name: Install Haskell plugin from Hackage
        run: cabal install proto-lens-protoc

      - name: Cache Haskell plugin
        if: steps.cache-proto-lens-protoc.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ${{ steps.setup-hs.outputs.cabal-store }}
          key: ${{ steps.cache-proto-lens-protoc.outputs.cache-primary-key }}

      - name: Install Buf from npm
        run: npm install @bufbuild/buf

      - name: Show node node_modules
        run: ls $(pwd)/node_modules/.bin

      - name: Generate code
        run: |
          for DIR in build cardano submit sync watch; do
            cd $DIR && buf generate proto
            cd ..
          done

      - name: Get Package Version
        id: package-version
        run: |
          VERSION=$(sed -nE '/^version:\s*([0-9]\.[0-9]+\.[0-9]+.*)$/s||\1|p' utxorpc.cabal)
          echo VERSION=$VERSION >> "GITHUB_OUTPUT"

      - name: Build Haskell Library
        id: build
        env:
          version: ${{ steps.package-version.outputs.VERSION }}
        run: |
          cabal build
          cabal sdist
          echo "SDIST-LOCATION=$(pwd)/dist-newstyle/sdist/utxorpc-${{ env.version }}.tar.gz"

      - name: Upload Haskell Artifacts
        uses: actions/upload-artifact@v4
        env:
          version: ${{ steps.package-version.outputs.VERSION }}
          location: ${{ steps.build.outputs.SDIST-LOCATION }}
        with:
          name: haskell-${{ env.version }}
          path: ${{ env.location }}

      - name: Make release
        uses: ncipollo/release-action@v1
        env:
          location: ${{ steps.build.outputs.SDIST-LOCATION }}
        with:
          artifacts: ${{ env.location }}
