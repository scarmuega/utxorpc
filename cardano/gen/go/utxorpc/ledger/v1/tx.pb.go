// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: utxorpc/ledger/v1/tx.proto

package ledgerv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Purpose of the redeemer in a transaction.
type Purpose int32

const (
	Purpose_NO_PURPOSE Purpose = 0
	Purpose_SPEND      Purpose = 1
	Purpose_MINT       Purpose = 2
	Purpose_CERT       Purpose = 3
	Purpose_REWARD     Purpose = 4
)

// Enum value maps for Purpose.
var (
	Purpose_name = map[int32]string{
		0: "NO_PURPOSE",
		1: "SPEND",
		2: "MINT",
		3: "CERT",
		4: "REWARD",
	}
	Purpose_value = map[string]int32{
		"NO_PURPOSE": 0,
		"SPEND":      1,
		"MINT":       2,
		"CERT":       3,
		"REWARD":     4,
	}
)

func (x Purpose) Enum() *Purpose {
	p := new(Purpose)
	*p = x
	return p
}

func (x Purpose) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Purpose) Descriptor() protoreflect.EnumDescriptor {
	return file_utxorpc_ledger_v1_tx_proto_enumTypes[0].Descriptor()
}

func (Purpose) Type() protoreflect.EnumType {
	return &file_utxorpc_ledger_v1_tx_proto_enumTypes[0]
}

func (x Purpose) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Purpose.Descriptor instead.
func (Purpose) EnumDescriptor() ([]byte, []int) {
	return file_utxorpc_ledger_v1_tx_proto_rawDescGZIP(), []int{0}
}

// Redeemer information for a Plutus script.
type Redeemer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Purpose Purpose     `protobuf:"varint,1,opt,name=purpose,proto3,enum=utxorpc.ledger.v1.Purpose" json:"purpose,omitempty"` // Purpose of the redeemer.
	Datum   *PlutusData `protobuf:"bytes,2,opt,name=datum,proto3" json:"datum,omitempty"`                                     // Plutus data associated with the redeemer.
}

func (x *Redeemer) Reset() {
	*x = Redeemer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Redeemer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Redeemer) ProtoMessage() {}

func (x *Redeemer) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Redeemer.ProtoReflect.Descriptor instead.
func (*Redeemer) Descriptor() ([]byte, []int) {
	return file_utxorpc_ledger_v1_tx_proto_rawDescGZIP(), []int{0}
}

func (x *Redeemer) GetPurpose() Purpose {
	if x != nil {
		return x.Purpose
	}
	return Purpose_NO_PURPOSE
}

func (x *Redeemer) GetDatum() *PlutusData {
	if x != nil {
		return x.Datum
	}
	return nil
}

// Represents a transaction input in the Cardano blockchain.
type TxInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash      []byte    `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`                 // Hash of the previous transaction.
	OutputIndex uint32    `protobuf:"varint,2,opt,name=output_index,json=outputIndex,proto3" json:"output_index,omitempty"` // Index of the output in the previous transaction.
	AsOutput    *TxOutput `protobuf:"bytes,3,opt,name=as_output,json=asOutput,proto3" json:"as_output,omitempty"`           // Content of the input represented as output of the related transaction
}

func (x *TxInput) Reset() {
	*x = TxInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxInput) ProtoMessage() {}

func (x *TxInput) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxInput.ProtoReflect.Descriptor instead.
func (*TxInput) Descriptor() ([]byte, []int) {
	return file_utxorpc_ledger_v1_tx_proto_rawDescGZIP(), []int{1}
}

func (x *TxInput) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *TxInput) GetOutputIndex() uint32 {
	if x != nil {
		return x.OutputIndex
	}
	return 0
}

func (x *TxInput) GetAsOutput() *TxOutput {
	if x != nil {
		return x.AsOutput
	}
	return nil
}

// Represents a transaction output in the Cardano blockchain.
type TxOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   []byte        `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`                      // Address receiving the output.
	Coin      uint64        `protobuf:"varint,2,opt,name=coin,proto3" json:"coin,omitempty"`                           // Amount of ADA in the output.
	Assets    []*Multiasset `protobuf:"bytes,3,rep,name=assets,proto3" json:"assets,omitempty"`                        // Additional native (non-ADA) assets in the output.
	Datum     *PlutusData   `protobuf:"bytes,4,opt,name=datum,proto3" json:"datum,omitempty"`                          // Plutus data associated with the output.
	DatumHash []byte        `protobuf:"bytes,5,opt,name=datum_hash,json=datumHash,proto3" json:"datum_hash,omitempty"` // Hash of the Plutus data.
	Script    *Script       `protobuf:"bytes,6,opt,name=script,proto3" json:"script,omitempty"`                        // Script associated with the output.
	Redeemer  *Redeemer     `protobuf:"bytes,7,opt,name=redeemer,proto3" json:"redeemer,omitempty"`                    // Redeemer for the Plutus script.
}

func (x *TxOutput) Reset() {
	*x = TxOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxOutput) ProtoMessage() {}

func (x *TxOutput) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxOutput.ProtoReflect.Descriptor instead.
func (*TxOutput) Descriptor() ([]byte, []int) {
	return file_utxorpc_ledger_v1_tx_proto_rawDescGZIP(), []int{2}
}

func (x *TxOutput) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *TxOutput) GetCoin() uint64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *TxOutput) GetAssets() []*Multiasset {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *TxOutput) GetDatum() *PlutusData {
	if x != nil {
		return x.Datum
	}
	return nil
}

func (x *TxOutput) GetDatumHash() []byte {
	if x != nil {
		return x.DatumHash
	}
	return nil
}

func (x *TxOutput) GetScript() *Script {
	if x != nil {
		return x.Script
	}
	return nil
}

func (x *TxOutput) GetRedeemer() *Redeemer {
	if x != nil {
		return x.Redeemer
	}
	return nil
}

// Represents a custom asset in the Cardano blockchain.
type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     []byte `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`          // Name of the custom asset.
	Quantity uint64 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"` // Quantity of the custom asset.
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_utxorpc_ledger_v1_tx_proto_rawDescGZIP(), []int{3}
}

func (x *Asset) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Asset) GetQuantity() uint64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// Represents a multi-asset group in the Cardano blockchain.
type Multiasset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyId []byte   `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"` // Policy ID governing the custom assets.
	Assets   []*Asset `protobuf:"bytes,2,rep,name=assets,proto3" json:"assets,omitempty"`                     // List of custom assets.
}

func (x *Multiasset) Reset() {
	*x = Multiasset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Multiasset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Multiasset) ProtoMessage() {}

func (x *Multiasset) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Multiasset.ProtoReflect.Descriptor instead.
func (*Multiasset) Descriptor() ([]byte, []int) {
	return file_utxorpc_ledger_v1_tx_proto_rawDescGZIP(), []int{4}
}

func (x *Multiasset) GetPolicyId() []byte {
	if x != nil {
		return x.PolicyId
	}
	return nil
}

func (x *Multiasset) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

// Represents the validity interval of a transaction.
type TxValidity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start uint64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"` // Start of the validity interval.
	Ttl   uint64 `protobuf:"varint,2,opt,name=ttl,proto3" json:"ttl,omitempty"`     // End of the validity interval (TTL: Time to Live).
}

func (x *TxValidity) Reset() {
	*x = TxValidity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxValidity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxValidity) ProtoMessage() {}

func (x *TxValidity) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxValidity.ProtoReflect.Descriptor instead.
func (*TxValidity) Descriptor() ([]byte, []int) {
	return file_utxorpc_ledger_v1_tx_proto_rawDescGZIP(), []int{5}
}

func (x *TxValidity) GetStart() uint64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *TxValidity) GetTtl() uint64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

// Represents the collateral information for a transaction.
type Collateral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collateral       []*TxInput `protobuf:"bytes,1,rep,name=collateral,proto3" json:"collateral,omitempty"`                                     // Collateral inputs for the transaction.
	CollateralReturn *TxOutput  `protobuf:"bytes,2,opt,name=collateral_return,json=collateralReturn,proto3" json:"collateral_return,omitempty"` // Collateral return in case of script failure.
	TotalCollateral  uint64     `protobuf:"varint,3,opt,name=total_collateral,json=totalCollateral,proto3" json:"total_collateral,omitempty"`   // Total amount of collateral.
}

func (x *Collateral) Reset() {
	*x = Collateral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collateral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collateral) ProtoMessage() {}

func (x *Collateral) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collateral.ProtoReflect.Descriptor instead.
func (*Collateral) Descriptor() ([]byte, []int) {
	return file_utxorpc_ledger_v1_tx_proto_rawDescGZIP(), []int{6}
}

func (x *Collateral) GetCollateral() []*TxInput {
	if x != nil {
		return x.Collateral
	}
	return nil
}

func (x *Collateral) GetCollateralReturn() *TxOutput {
	if x != nil {
		return x.CollateralReturn
	}
	return nil
}

func (x *Collateral) GetTotalCollateral() uint64 {
	if x != nil {
		return x.TotalCollateral
	}
	return 0
}

// Represents a withdrawal from a reward account.
type Withdrawal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardAccount []byte `protobuf:"bytes,1,opt,name=reward_account,json=rewardAccount,proto3" json:"reward_account,omitempty"` // Address of the reward account.
	Coin          uint64 `protobuf:"varint,2,opt,name=coin,proto3" json:"coin,omitempty"`                                       // Amount of ADA withdrawn.
}

func (x *Withdrawal) Reset() {
	*x = Withdrawal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Withdrawal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Withdrawal) ProtoMessage() {}

func (x *Withdrawal) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Withdrawal.ProtoReflect.Descriptor instead.
func (*Withdrawal) Descriptor() ([]byte, []int) {
	return file_utxorpc_ledger_v1_tx_proto_rawDescGZIP(), []int{7}
}

func (x *Withdrawal) GetRewardAccount() []byte {
	if x != nil {
		return x.RewardAccount
	}
	return nil
}

func (x *Withdrawal) GetCoin() uint64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

// Represents a set of witnesses that validate a transaction
type WitnessSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vkeywitness  []*VKeyWitness `protobuf:"bytes,1,rep,name=vkeywitness,proto3" json:"vkeywitness,omitempty"`                       // List of VKey witnesses.
	Script       []*Script      `protobuf:"bytes,2,rep,name=script,proto3" json:"script,omitempty"`                                 // List of scripts.
	PlutusDatums []*PlutusData  `protobuf:"bytes,3,rep,name=plutus_datums,json=plutusDatums,proto3" json:"plutus_datums,omitempty"` // List of Plutus data elements associated with the transaction.
}

func (x *WitnessSet) Reset() {
	*x = WitnessSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WitnessSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WitnessSet) ProtoMessage() {}

func (x *WitnessSet) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WitnessSet.ProtoReflect.Descriptor instead.
func (*WitnessSet) Descriptor() ([]byte, []int) {
	return file_utxorpc_ledger_v1_tx_proto_rawDescGZIP(), []int{8}
}

func (x *WitnessSet) GetVkeywitness() []*VKeyWitness {
	if x != nil {
		return x.Vkeywitness
	}
	return nil
}

func (x *WitnessSet) GetScript() []*Script {
	if x != nil {
		return x.Script
	}
	return nil
}

func (x *WitnessSet) GetPlutusDatums() []*PlutusData {
	if x != nil {
		return x.PlutusDatums
	}
	return nil
}

// Auxiliary data not directly tied to the validation process
type AuxData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata []*Metadata `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty"` // List of auxiliary metadata elements.
	Scripts  []*Script   `protobuf:"bytes,2,rep,name=scripts,proto3" json:"scripts,omitempty"`   // List of auxiliary scripts.
}

func (x *AuxData) Reset() {
	*x = AuxData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuxData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuxData) ProtoMessage() {}

func (x *AuxData) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuxData.ProtoReflect.Descriptor instead.
func (*AuxData) Descriptor() ([]byte, []int) {
	return file_utxorpc_ledger_v1_tx_proto_rawDescGZIP(), []int{9}
}

func (x *AuxData) GetMetadata() []*Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AuxData) GetScripts() []*Script {
	if x != nil {
		return x.Scripts
	}
	return nil
}

// Represents a transaction in the Cardano blockchain.
type Tx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs          []*TxInput     `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`                                          // List of transaction inputs
	Outputs         []*TxOutput    `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`                                        // List of transaction outputs
	Certificates    []*Certificate `protobuf:"bytes,3,rep,name=certificates,proto3" json:"certificates,omitempty"`                              // List of certificates
	Withdrawals     []*Withdrawal  `protobuf:"bytes,4,rep,name=withdrawals,proto3" json:"withdrawals,omitempty"`                                // List of withdrawals
	Mint            []*Multiasset  `protobuf:"bytes,5,rep,name=mint,proto3" json:"mint,omitempty"`                                              // List of minted custom assets
	ReferenceInputs []*TxInput     `protobuf:"bytes,6,rep,name=reference_inputs,json=referenceInputs,proto3" json:"reference_inputs,omitempty"` // List of reference inputs
	Witnesses       *WitnessSet    `protobuf:"bytes,7,opt,name=witnesses,proto3" json:"witnesses,omitempty"`                                    // Witnesses that validte the transaction
	Collateral      *Collateral    `protobuf:"bytes,8,opt,name=collateral,proto3" json:"collateral,omitempty"`                                  // Collateral details in case of failed transaction
	Fee             uint64         `protobuf:"varint,9,opt,name=fee,proto3" json:"fee,omitempty"`                                               // Transaction fee in ADA
	Validity        *TxValidity    `protobuf:"bytes,10,opt,name=validity,proto3" json:"validity,omitempty"`                                     // Validity interval of the transaction
	Successful      bool           `protobuf:"varint,11,opt,name=successful,proto3" json:"successful,omitempty"`                                // Flag indicating whether the transaction was successful
	Auxiliary       *AuxData       `protobuf:"bytes,12,opt,name=auxiliary,proto3" json:"auxiliary,omitempty"`                                   // Auxiliary data not directly tied to the validation process
}

func (x *Tx) Reset() {
	*x = Tx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tx) ProtoMessage() {}

func (x *Tx) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tx.ProtoReflect.Descriptor instead.
func (*Tx) Descriptor() ([]byte, []int) {
	return file_utxorpc_ledger_v1_tx_proto_rawDescGZIP(), []int{10}
}

func (x *Tx) GetInputs() []*TxInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *Tx) GetOutputs() []*TxOutput {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *Tx) GetCertificates() []*Certificate {
	if x != nil {
		return x.Certificates
	}
	return nil
}

func (x *Tx) GetWithdrawals() []*Withdrawal {
	if x != nil {
		return x.Withdrawals
	}
	return nil
}

func (x *Tx) GetMint() []*Multiasset {
	if x != nil {
		return x.Mint
	}
	return nil
}

func (x *Tx) GetReferenceInputs() []*TxInput {
	if x != nil {
		return x.ReferenceInputs
	}
	return nil
}

func (x *Tx) GetWitnesses() *WitnessSet {
	if x != nil {
		return x.Witnesses
	}
	return nil
}

func (x *Tx) GetCollateral() *Collateral {
	if x != nil {
		return x.Collateral
	}
	return nil
}

func (x *Tx) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *Tx) GetValidity() *TxValidity {
	if x != nil {
		return x.Validity
	}
	return nil
}

func (x *Tx) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *Tx) GetAuxiliary() *AuxData {
	if x != nil {
		return x.Auxiliary
	}
	return nil
}

// Represents a VKey witness used to sign a transaction.
type VKeyWitness struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vkey      []byte `protobuf:"bytes,1,opt,name=vkey,proto3" json:"vkey,omitempty"`           // Verification key.
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"` // Signature generated using the associated private key.
}

func (x *VKeyWitness) Reset() {
	*x = VKeyWitness{}
	if protoimpl.UnsafeEnabled {
		mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VKeyWitness) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VKeyWitness) ProtoMessage() {}

func (x *VKeyWitness) ProtoReflect() protoreflect.Message {
	mi := &file_utxorpc_ledger_v1_tx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VKeyWitness.ProtoReflect.Descriptor instead.
func (*VKeyWitness) Descriptor() ([]byte, []int) {
	return file_utxorpc_ledger_v1_tx_proto_rawDescGZIP(), []int{11}
}

func (x *VKeyWitness) GetVkey() []byte {
	if x != nil {
		return x.Vkey
	}
	return nil
}

func (x *VKeyWitness) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_utxorpc_ledger_v1_tx_proto protoreflect.FileDescriptor

var file_utxorpc_ledger_v1_tx_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x75, 0x74,
	0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a,
	0x1d, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x75, 0x0a, 0x08, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x65, 0x72, 0x12, 0x34, 0x0a,
	0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x07, 0x70, 0x75, 0x72, 0x70,
	0x6f, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x05, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x22, 0x7f, 0x0a, 0x07, 0x54, 0x78, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x38, 0x0a, 0x09, 0x61, 0x73, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52,
	0x08, 0x61, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0xaf, 0x02, 0x0a, 0x08, 0x54, 0x78,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x12, 0x35, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x05, 0x64,
	0x61, 0x74, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x74, 0x78,
	0x6f, 0x72, 0x70, 0x63, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x75, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x64, 0x61, 0x74, 0x75, 0x6d,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x31, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x65,
	0x72, 0x52, 0x08, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x65, 0x72, 0x22, 0x37, 0x0a, 0x05, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x22, 0x5b, 0x0a, 0x0a, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x12,
	0x30, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x22, 0x34, 0x0a, 0x0a, 0x54, 0x78, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0xbd, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x74, 0x78,
	0x6f, 0x72, 0x70, 0x63, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x6c, 0x12, 0x48, 0x0a, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c,
	0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x10, 0x63, 0x6f, 0x6c, 0x6c,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x29, 0x0a, 0x10,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6c,
	0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x22, 0x47, 0x0a, 0x0a, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e,
	0x22, 0xc5, 0x01, 0x0a, 0x0a, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74, 0x12,
	0x40, 0x0a, 0x0b, 0x76, 0x6b, 0x65, 0x79, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x4b, 0x65, 0x79, 0x57, 0x69, 0x74,
	0x6e, 0x65, 0x73, 0x73, 0x52, 0x0b, 0x76, 0x6b, 0x65, 0x79, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73,
	0x73, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x06, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x12, 0x42, 0x0a, 0x0d, 0x70, 0x6c, 0x75, 0x74, 0x75, 0x73, 0x5f, 0x64,
	0x61, 0x74, 0x75, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x74,
	0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6c, 0x75, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x70, 0x6c, 0x75, 0x74,
	0x75, 0x73, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x73, 0x22, 0x77, 0x0a, 0x07, 0x41, 0x75, 0x78, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x07,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x07, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x73, 0x22, 0x91, 0x05, 0x0a, 0x02, 0x54, 0x78, 0x12, 0x32, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72,
	0x70, 0x63, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x07,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x74, 0x78, 0x6f,
	0x72, 0x70, 0x63, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75,
	0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x0b, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63,
	0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x10, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73,
	0x73, 0x53, 0x65, 0x74, 0x52, 0x09, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12,
	0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x6c, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65, 0x65,
	0x12, 0x39, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x12, 0x38, 0x0a, 0x09, 0x61,
	0x75, 0x78, 0x69, 0x6c, 0x69, 0x61, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x75, 0x78, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x61, 0x75, 0x78, 0x69,
	0x6c, 0x69, 0x61, 0x72, 0x79, 0x22, 0x3f, 0x0a, 0x0b, 0x56, 0x4b, 0x65, 0x79, 0x57, 0x69, 0x74,
	0x6e, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x76, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2a, 0x44, 0x0a, 0x07, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x5f, 0x50, 0x55, 0x52, 0x50, 0x4f, 0x53, 0x45, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x4d, 0x49, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x45, 0x52, 0x54, 0x10, 0x03,
	0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x10, 0x04, 0x42, 0xc3, 0x01, 0x0a,
	0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x07, 0x54, 0x78, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75,
	0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x62, 0x75, 0x66, 0x2d, 0x74, 0x6f, 0x75, 0x72, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x75, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2f, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02,
	0x03, 0x55, 0x4c, 0x58, 0xaa, 0x02, 0x11, 0x55, 0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x4c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x11, 0x55, 0x74, 0x78, 0x6f, 0x72,
	0x70, 0x63, 0x5c, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1d, 0x55,
	0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x5c, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x13, 0x55,
	0x74, 0x78, 0x6f, 0x72, 0x70, 0x63, 0x3a, 0x3a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_utxorpc_ledger_v1_tx_proto_rawDescOnce sync.Once
	file_utxorpc_ledger_v1_tx_proto_rawDescData = file_utxorpc_ledger_v1_tx_proto_rawDesc
)

func file_utxorpc_ledger_v1_tx_proto_rawDescGZIP() []byte {
	file_utxorpc_ledger_v1_tx_proto_rawDescOnce.Do(func() {
		file_utxorpc_ledger_v1_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_utxorpc_ledger_v1_tx_proto_rawDescData)
	})
	return file_utxorpc_ledger_v1_tx_proto_rawDescData
}

var file_utxorpc_ledger_v1_tx_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_utxorpc_ledger_v1_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_utxorpc_ledger_v1_tx_proto_goTypes = []interface{}{
	(Purpose)(0),        // 0: utxorpc.ledger.v1.Purpose
	(*Redeemer)(nil),    // 1: utxorpc.ledger.v1.Redeemer
	(*TxInput)(nil),     // 2: utxorpc.ledger.v1.TxInput
	(*TxOutput)(nil),    // 3: utxorpc.ledger.v1.TxOutput
	(*Asset)(nil),       // 4: utxorpc.ledger.v1.Asset
	(*Multiasset)(nil),  // 5: utxorpc.ledger.v1.Multiasset
	(*TxValidity)(nil),  // 6: utxorpc.ledger.v1.TxValidity
	(*Collateral)(nil),  // 7: utxorpc.ledger.v1.Collateral
	(*Withdrawal)(nil),  // 8: utxorpc.ledger.v1.Withdrawal
	(*WitnessSet)(nil),  // 9: utxorpc.ledger.v1.WitnessSet
	(*AuxData)(nil),     // 10: utxorpc.ledger.v1.AuxData
	(*Tx)(nil),          // 11: utxorpc.ledger.v1.Tx
	(*VKeyWitness)(nil), // 12: utxorpc.ledger.v1.VKeyWitness
	(*PlutusData)(nil),  // 13: utxorpc.ledger.v1.PlutusData
	(*Script)(nil),      // 14: utxorpc.ledger.v1.Script
	(*Metadata)(nil),    // 15: utxorpc.ledger.v1.Metadata
	(*Certificate)(nil), // 16: utxorpc.ledger.v1.Certificate
}
var file_utxorpc_ledger_v1_tx_proto_depIdxs = []int32{
	0,  // 0: utxorpc.ledger.v1.Redeemer.purpose:type_name -> utxorpc.ledger.v1.Purpose
	13, // 1: utxorpc.ledger.v1.Redeemer.datum:type_name -> utxorpc.ledger.v1.PlutusData
	3,  // 2: utxorpc.ledger.v1.TxInput.as_output:type_name -> utxorpc.ledger.v1.TxOutput
	5,  // 3: utxorpc.ledger.v1.TxOutput.assets:type_name -> utxorpc.ledger.v1.Multiasset
	13, // 4: utxorpc.ledger.v1.TxOutput.datum:type_name -> utxorpc.ledger.v1.PlutusData
	14, // 5: utxorpc.ledger.v1.TxOutput.script:type_name -> utxorpc.ledger.v1.Script
	1,  // 6: utxorpc.ledger.v1.TxOutput.redeemer:type_name -> utxorpc.ledger.v1.Redeemer
	4,  // 7: utxorpc.ledger.v1.Multiasset.assets:type_name -> utxorpc.ledger.v1.Asset
	2,  // 8: utxorpc.ledger.v1.Collateral.collateral:type_name -> utxorpc.ledger.v1.TxInput
	3,  // 9: utxorpc.ledger.v1.Collateral.collateral_return:type_name -> utxorpc.ledger.v1.TxOutput
	12, // 10: utxorpc.ledger.v1.WitnessSet.vkeywitness:type_name -> utxorpc.ledger.v1.VKeyWitness
	14, // 11: utxorpc.ledger.v1.WitnessSet.script:type_name -> utxorpc.ledger.v1.Script
	13, // 12: utxorpc.ledger.v1.WitnessSet.plutus_datums:type_name -> utxorpc.ledger.v1.PlutusData
	15, // 13: utxorpc.ledger.v1.AuxData.metadata:type_name -> utxorpc.ledger.v1.Metadata
	14, // 14: utxorpc.ledger.v1.AuxData.scripts:type_name -> utxorpc.ledger.v1.Script
	2,  // 15: utxorpc.ledger.v1.Tx.inputs:type_name -> utxorpc.ledger.v1.TxInput
	3,  // 16: utxorpc.ledger.v1.Tx.outputs:type_name -> utxorpc.ledger.v1.TxOutput
	16, // 17: utxorpc.ledger.v1.Tx.certificates:type_name -> utxorpc.ledger.v1.Certificate
	8,  // 18: utxorpc.ledger.v1.Tx.withdrawals:type_name -> utxorpc.ledger.v1.Withdrawal
	5,  // 19: utxorpc.ledger.v1.Tx.mint:type_name -> utxorpc.ledger.v1.Multiasset
	2,  // 20: utxorpc.ledger.v1.Tx.reference_inputs:type_name -> utxorpc.ledger.v1.TxInput
	9,  // 21: utxorpc.ledger.v1.Tx.witnesses:type_name -> utxorpc.ledger.v1.WitnessSet
	7,  // 22: utxorpc.ledger.v1.Tx.collateral:type_name -> utxorpc.ledger.v1.Collateral
	6,  // 23: utxorpc.ledger.v1.Tx.validity:type_name -> utxorpc.ledger.v1.TxValidity
	10, // 24: utxorpc.ledger.v1.Tx.auxiliary:type_name -> utxorpc.ledger.v1.AuxData
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_utxorpc_ledger_v1_tx_proto_init() }
func file_utxorpc_ledger_v1_tx_proto_init() {
	if File_utxorpc_ledger_v1_tx_proto != nil {
		return
	}
	file_utxorpc_ledger_v1_certs_proto_init()
	file_utxorpc_ledger_v1_metadata_proto_init()
	file_utxorpc_ledger_v1_scripts_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_utxorpc_ledger_v1_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Redeemer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_ledger_v1_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_ledger_v1_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_ledger_v1_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_ledger_v1_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Multiasset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_ledger_v1_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxValidity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_ledger_v1_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collateral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_ledger_v1_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Withdrawal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_ledger_v1_tx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WitnessSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_ledger_v1_tx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuxData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_ledger_v1_tx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_utxorpc_ledger_v1_tx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VKeyWitness); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_utxorpc_ledger_v1_tx_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_utxorpc_ledger_v1_tx_proto_goTypes,
		DependencyIndexes: file_utxorpc_ledger_v1_tx_proto_depIdxs,
		EnumInfos:         file_utxorpc_ledger_v1_tx_proto_enumTypes,
		MessageInfos:      file_utxorpc_ledger_v1_tx_proto_msgTypes,
	}.Build()
	File_utxorpc_ledger_v1_tx_proto = out.File
	file_utxorpc_ledger_v1_tx_proto_rawDesc = nil
	file_utxorpc_ledger_v1_tx_proto_goTypes = nil
	file_utxorpc_ledger_v1_tx_proto_depIdxs = nil
}
